name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install -e .[test]
      - name: Run isort check
        run: python -m isort codebleu --check
      - name: Run black check
        run: python -m black codebleu --check
      - name: Run ruff check
        run: python -m ruff codebleu
      - name: Run mypy check
        run: python -m mypy codebleu

  build_wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Prebuild so file for the system
        run: |
          cd codebleu/parser
          bash build.sh
          ls -lah
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
      - name: Show wheel files
        run: ls -lah ./wheelhouse

  test-python:
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    name: Test wheel on ${{ matrix.os }} and Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    needs: [build_wheels]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist
      - name: Show dist files
        run: ls -lah ./dist
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          # install package from local dist directory
          pip install --no-index --find-links=./dist codebleu
          # install dependencies for the package and tests
          pip install .[test]
      - name: Test itself
        run: python -m pytest --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: coverage.xml
          flags: unittests # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
